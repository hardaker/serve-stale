<?xml version="1.0" encoding="us-ascii"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.9 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC2181 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2181.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7719 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7719.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-serve-stale-02" category="std" updates="1034, 1035">

  <front>
    <title abbrev="DNS Serve Stale">Serving Stale Data to Improve DNS Resiliency</title>

    <author initials="D.C." surname="Lawrence" fullname="David C Lawrence">
      <organization>Oracle + Dyn</organization>
      <address>
        <email>tale@dd.org</email>
      </address>
    </author>
    <author initials="W." surname="Kumari" fullname="Warren Kumari">
      <organization>Google</organization>
      <address>
        <postal>
          <street>1600 Amphitheatre Parkway</street>
          <city>Mountain View</city>
          <code>CA 94043</code>
          <country>USA</country>
        </postal>
        <email>warren@kumari.net</email>
      </address>
    </author>
    <author initials="P." surname="Sood" fullname="Puneet Sood">
      <organization></organization>
      <address>
        <email>puneets@google.com</email>
      </address>
    </author>

    <date year="2018" month="October"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This draft defines a method for recursive resolvers to use stale DNS
data to avoid outages when authoritative nameservers cannot be reached
to refresh expired data.</t>



    </abstract>


    <note title="Ed note">


<t>Text inside square brackets ([]) is additional background
information, answers to frequently asked questions, general musings,
etc.  They will be removed before publication.  This document is being
collaborated on in GitHub at
&lt;https://github.com/vttale/serve-stale&gt;.  The most recent
version of the document, open issues, etc should all be available
here.  The authors gratefully accept pull requests.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Traditionally the Time To Live (TTL) of a DNS resource record has been
understood to represent the maximum number of seconds that a record
can be used before it must be discarded, based on its description and
usage in <xref target="RFC1035"/> and clarifications in <xref target="RFC2181"/>.</t>

<t>This document proposes that the definition of the TTL be explicitly
expanded to allow for expired data to be used in the exceptional
circumstance that a recursive resolver is unable to refresh the
information.  It is predicated on the observation that authoritative
server unavailability can cause outages even when the underlying data
those servers would return is typically unchanged.</t>

<t>We describe a method below for this use of stale data, balancing the
competing needs of resiliency and freshness.  While this intended to
be immediately useful to the installed base of DNS software, we also
propose an <xref target="RFC6891"/> EDNS option for enhanced signalling around the
use of stale data by implementations that understand it.</t>

</section>
<section anchor="notes-to-readers" title="Notes to readers">

<t>[ RFC Editor, please remove this section before publication!  Readers:
This is conversational text to describe what we've done, and will be
removed, please don't bother sending editorial nits. :-) ]</t>

<t>Due to circumstances, the authors of this document got sidetracked,
and we lost focus.  We are now reviving it, and are trying to address
and incorporate comments.  There has also been more deployment and
implementation recently, and so this document is now more describing
what is known to work instead of simply proposing a concept.</t>

<t>Open questions:</t>

<t><list style="symbols">
  <t>The EDNS option that we propose for debugging is relatively
full-featured to identify which RRsets are stale.  It could be
simplified to just indicate that an answer is stale, or even removed
entirely in favour of an Extended Error result that indicates
staleness.</t>
  <t>What TTL value to recommend be set in stale answers returned by
recursive resolvers.</t>
</list></t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
"OPTIONAL" in this document are to be interpreted as described in
<xref target="RFC2119"/> when, and only when, they appear in all capitals, as shown
here.</t>

<t>For a comprehensive treatment of DNS terms, please see <xref target="RFC7719"/>.</t>

</section>
<section anchor="background" title="Background">

<t>There are a number of reasons why an authoritative server may become
unreachable, including Denial of Service (DoS) attacks, network
issues, and so on.  If the recursive server is unable to contact the
authoritative servers for a name but still has relevant data that has
aged past its TTL, that information can still be useful for generating
an answer under the metaphorical assumption that, "stale bread is
better than no bread."</t>

<t><xref target="RFC1035"/> Section 3.2.1 says that the TTL "specifies the time
interval that the resource record may be cached before the source of
the information should again be consulted", and Section 4.1.3 further
says the TTL, "specifies the time interval (in seconds) that the
resource record may be cached before it should be discarded."</t>

<t>A natural English interpretation of these remarks would seem to be
clear enough that records past their TTL expiration must not be used,
However, <xref target="RFC1035"/> predates the more rigorous terminology of
<xref target="RFC2119"/> which softened the interpretation of "may" and "should".</t>

<t><xref target="RFC2181"/> aimed to provide "the precise definition of the Time to
Live" but in Section 8 was mostly concerned with the numeric range of
values and the possibility that very large values should be capped. (It
also has the curious suggestion that a value in the range 2147483648
to 4294967295 should be treated as zero.)  It closes that section by
noting, "The TTL specifies a maximum time to live, not a mandatory
time to live."  This is again not <xref target="RFC2119"/>-normative language, but
does convey the natural language connotation that data becomes
unusable past TTL expiry.</t>

<t>Several major recursive resolver operators currently use stale data
for answers in some way, including Akamai (via both Nomimum and
Xerocole), Knot, OpenDNS, and Unbound.  Apple can also use stale data
as part of the Happy Eyeballs algorithms in mDNSResponder.  The
collective operational experience is that it provides significant
benefit with minimal downside.</t>

</section>
<section anchor="standards-action" title="Standards Action">

<t>The definition of TTL in <xref target="RFC1035"/> Sections 3.2.1 and 4.1.3 is
amended to read:</t>

<t><list style="hanging">
  <t hangText='TTL'>
  a 32 bit unsigned integer number of seconds in the range 0 -
2147483647 that specifies the time interval that the resource record
MAY be cached before the source of the information MUST again be
consulted.  Zero values are interpreted to mean that the RR can only
be used for the transaction in progress, and should not be cached.
Values with the high order bit set SHOULD be capped at no more than
2147483647.  If the authority for the data is unavailable when
attempting to refresh the data past the given interval, the record MAY
be used as though it is unexpired.</t>
</list></t>

<t>[ Discussion point: capping values with the high order bit as being
max positive, rather than 0, is a change from <xref target="RFC2181"/>.  Also, we
could use this opportunity to recommend a much more sane maximum value
like 604800 seconds, one week. ]</t>

</section>
<section anchor="edns-option" title="EDNS Option">

<t>While the basic behaviour of this answer-of-last-resort can be
achieved with changes only to resolvers, explicit signalling about the
use of stale data can be done with an EDNS <xref target="RFC6891"/> option.  This
option can be included from a stub or forwarding resolver to a
recursive resolver, explicitly signalling that it does not want stale
answers, or for learning that stale data was in use.  It is expected
that this could be useful for debugging.</t>

<t>[ This section will be fleshed out a bit more thoroughly if there is
interest in pursuing the option. Here are two potential options that
could be used, one more fully-featured to indicate which RRsets are
stale and one much more simple to indicate that stale data is
present. These are proposed as mutually exclusive; the final document
will have one or zero such options. ]</t>

<section anchor="option-format-proposal-1" title="Option Format Proposal 1">

<t>The option is structured as follows:</t>

<figure><artwork><![CDATA[
              +0 (MSB)                        +1 (LSB)
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
0: |                         OPTION-CODE                       |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
2: |                        OPTION-LENGTH                      |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
4: |                     STALE-RRSET-INDEX 1                   |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
6: |                                                           |
8: |                         TTL-EXPIRY 1                      |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   :  ... additional STALE-RRSET-INDEX / TTL-EXPIRY pairs ...  :
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='OPTION-CODE'>
  2 octets per <xref target="RFC6891"/>.  For Serve-Stale the code is TBD by IANA.</t>
  <t hangText='OPTION-LENGTH'>
  2 octets per <xref target="RFC6891"/>.  Contains the length of the payload
following OPTION-LENGTH, in octets.</t>
  <t hangText='STALE-RRSET-INDEX'>
  Two octets as a signed integer, indicating the first RRSet in the
message which is beyond its TTL, with RRSet counting starting at 1 and
spanning message sections.</t>
  <t hangText='TTL-EXPIRY'>
  Four octets as an unsigned integer, representing the number of
seconds that have passed since the TTL for the RRset expired.</t>
</list></t>

</section>
<section anchor="option-usage" title="Option Usage">

<t>Software making a DNS request can signal that it understands
Serve-Stale by including the option with one STALE-RRSET-INDEX
initialized to any negative value and TTY-EXPIRY initialized to 0.
The index is set to a negative value to detect mere reflection of the
option by responders that don't really understand it.</t>

<t>If the request is made to a recursive resolver which used any stale
RRsets in its reply, it then fills in the corresponding indices and
staleness values.  If no records are stale, STALE-RRSET-INDEX and
TTL-EXPIRY are set to 0.</t>

<t>If the request is made to an authoritative nameserver, it can use the
option in the reply to indicate how the resolver should treat the
records in the reply if they are unable to be refreshed later.  A
default for all RRsets in the message is established by setting the
first STALE-RRSET-INDEX to 0, with optional additional
STALE-RRSET-INDEX values overriding the default.  A TTL-EXPIRY value
of 0 means to never serve the RRset as stale, while non-zero values
represent the maximum amount of time it can be used before it MUST be
evicted.  [ Does anyone really want to do this?  It adds more state
into resolvers. Is the idea only for purists, or is there a practical
application? ]</t>

<t>No facility is made for a client of a resolver to signal that it
doesn't want stale answers, because if a client has knowledge of
Serve-Stale as an option, it also has enough knowledge to just ignore
any records that come back stale.  [ There is admittedly the issue
that the client might just want to wait out the whole attempted
resolution, which there's currently no way to indicate.  The absolute
value of STALE-RRSET-INDEX could be taken as a timer the requester is
willing to wait for an answer, but that's kind of gross overloading it
like that. Shame to burn another field on that, but on the other
hand it might also be nice if a client could always signal its
impatience level &#8211; "I must have an answer within 900 milliseconds!" ]</t>

</section>
<section anchor="option-format-proposal-2" title="Option Format Proposal 2">

<t>The option is structured as follows:</t>

<figure><artwork><![CDATA[
             +0 (MSB)                        +1 (LSB)
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
0: |                         OPTION-CODE                       |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
2: |                        OPTION-LENGTH                      |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
4: | D | U | S |             RESERVED                          |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='OPTION-CODE'>
  2 octets per <xref target="RFC6891"></xref>.  For Serve-Stale the code is TBD by IANA.</t>
  <t hangText='OPTION-LENGTH'>
  2 octets per <xref target="RFC6891"></xref>.  Contains the length of the
   payload following OPTION-LENGTH, in octets.</t>
  <t hangText='D Flag'>
  If set, the client explicitly does NOT want stale answers. If clear,
the client would like an indication of whether any data in the
response is stale.</t>
  <t hangText='U Flag'>
  This indicates that the server understand Serve-Stale EDNS option,
and more information is communicated via the S flag.  It exists to get
around the issue of some authorative servers simply echoing back
ENDS options it does not understand.</t>
  <t hangText='S Flag'>
  If set, this indicates that the response contains stale data.  If
clear, no data in the response has reached its TTL expiry.</t>
  <t hangText='RESERVED'>
  Reserved for future use. Should be set to zero on send and ignored
on receipt.</t>
</list></t>

</section>
</section>
<section anchor="example-method" title="Example Method">

<t>There is conceivably more than one way a recursive resolver could
responsibly implement this resiliency feature while still respecting
the intent of the TTL as a signal for when data is to be refreshed.</t>

<t>In this example method three notable timers drive considerations for
the use of stale data, as follows:</t>

<t><list style="symbols">
  <t>A client response timer, which is the maximum amount of time a
recursive resolver should allow between the receipt of a resolution
request and sending its response.</t>
  <t>A query resolution timer, which caps the total amount of time a
recursive resolver spends processing the query.</t>
  <t>A maximum stale timer, which caps the amount of time
that records will be kept past their expiration.</t>
</list></t>

<t>Recursive resolvers already have the second timer; the first and
third timers are new concepts for this mechanism.</t>

<t>When a request is received by the recursive resolver, it SHOULD start
the client response timer.  This timer is used to avoid client
timeouts.  It SHOULD be configurable, with a recommended value of 1.8
seconds.</t>

<t>The resolver then checks its cache for an unexpired answer. If it
finds none and the Recursion Desired flag is not set in the request,
it SHOULD immediately return the response without consulting the
cache for expired records.</t>

<t>If iterative lookups will be done, it SHOULD start the query
resolution timer.  This timer bounds the work done by the resolver,
and is commonly around 10 to 30 seconds.</t>

<t>If the answer has not been completely determined by the time the
client response timer has elapsed, the resolver SHOULD then check its
cache to see whether there is expired data that would satisfy the
request.  If so, it adds that data to the response message and SHOULD
set the TTL of each expired record in the message to 30 seconds.  The
response is then sent to the client while the resolver continues its
attempt to refresh the data.  30 second was chosen because
historically 0 second TTLs have been problematic for some
implementations, and similarly very short TTLs could lead to
congestive collapse as TTL-respecting clients rapidly try to refresh.
30 seconds not only sidesteps those potential problems with no
practical negative consequence, it would also rate limit further
queries from any client that is honoring the TTL, such as a forwarding
resolver.</t>

<t>The maximum stale timer is used for cache management and is
independent of the query resolution process. This timer is
conceptually different from the maximum cache TTL that exists in many
resolvers, the latter being a clamp on the value of TTLs as received
from authoritative servers.  The maximum stale timer SHOULD be
configurable, and defines the length of time after a record expires
that it SHOULD be retained in the cache.  The suggested value is 7
days, which gives time to notice the resolution problem and for human
intervention to fix it.</t>

<t>This same basic technique MAY be used to handle stale data associated
with delegations.  If authoritative server addresses are not able to
be refreshed, resolution can possibly still be successful if the
authoritative servers themselves are still up.</t>

</section>
<section anchor="implementation-caveats" title="Implementation Caveats">

<t>Answers from authoritative servers that have a DNS Response Code of
either 0 (NOERROR) or 3 (NXDOMAIN) MUST be considered to have
refreshed the data at the resolver.  In particular, this means that
this method is not meant to protect against operator error at the
authoritative server that turns a name that is intended to be valid
into one that is non-existent, because there is no way for a resolver
to know intent.</t>

<t>Resolution is given a chance to succeed before stale data is used to
adhere to the original intent of the design of the DNS.  This
mechanism is only intended to add robustness to failures, and to be
enabled all the time.  If stale data were used immediately and then a
cache refresh attempted after the client response has been sent, the
resolver would frequently be sending data that it would have had no
trouble refreshing.  As modern resolvers use techniques like
pre-fetching and request coalescing for efficiency, it is not
necessary that every client request needs to trigger a new lookup flow
in the presence of stale data, but rather than a good-faith effort
have been recently made to refresh the stale data before it is
delivered to any client.  The recommended period between attempting
refreshes is 30 seconds.</t>

<t>It is important to continue the resolution attempt after the stale
response has been sent, until the query resolution timeout, because
some pathological resolutions can take many seconds to succeed as they
cope with unavailable servers, bad networks, and other problems.
Stopping the resolution attempt when the response with expired data
has been sent would mean that answers in these pathological cases
would never be refreshed.</t>

<t>Canonical Name (CNAME) records mingled in the expired cache with other
records at the same owner name can cause surprising results.  This was
observed with an initial implementation in BIND when a hostname
changed from having an IPv4 Address (A) record to a CNAME.  The
version of BIND being used did not evict other types in the cache when
a CNAME was received, which in normal operations is not a significant
issue.  However, after both records expired and the authorities became
unavailable, the fallback to stale answers returned the older A
instead of the newer CNAME.</t>

<t>[ This probably applies to other occluding types, so more thought
should be given to the overall issue. ]</t>

<t>Keeping records around after their normal expiration will of course
cause caches to grow larger than if records were removed at their TTL.
Specific guidance on managing cache sizes is outside the scope of this
document.  Some areas for consideration include whether to track the
popularity of names in client requests versus evicting by maximum age,
and whether to provide a feature for manually flushing only stale
records.</t>

</section>
<section anchor="implementation-status" title="Implementation Status">

<t>[RFC Editor: per RFC 6982 this section should be removed prior to
publication.]</t>

<t>The algorithm described in the <xref target="example-method"/> section was
originally implemented as a patch to BIND 9.7.0.  It has been in
production on Akamai's production network since 2011, and effectively
smoothed over transient failures and longer outages that would have
resulted in major incidents.  The patch was contributed to Internet
Systems Consortium and the functionality is now available in BIND 9.12
via the options stale-answer-enable, stale-answer-ttl, and max-stale-ttl.</t>

<t>Unbound has a similar feature for serving stale answers, but it works
in a very different way by returning whatever cached answer it has
before trying to refresh expired records. This is unfortunately not
faithful to the ideal that data past expiry should attempt to be
refreshed before being served.</t>

<t>Knot Resolver has an demo module here:
https://knot-resolver.readthedocs.io/en/stable/modules.html#serve-stale</t>

<t>Details of Apple's implementation are not currently known.</t>

<t>In the research paper "When the Dike Breaks: Dissecting DNS Defenses
During DDoS" <xref target="DikeBreaks"/>, the authors detected some use of stale answers by
resolvers when authorities came under attack.  Their research results
suggest that more widespread adoption of the technique would
significantly improve resiliency for the large number of requests that
fail during an attack.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>The most obvious security issue is the increased likelihood of DNSSEC
validation failures when using stale data because signatures could be
returned outside their validity period.  This would only be an issue
if the authoritative servers are unreachable, the only time the
techniques in this document are used, and thus does not introduce
a new failure in place of what would have otherwise been success.</t>

<t>Additionally, bad actors have been known to use DNS caches to keep
records alive even after their authorities have gone away.  This
potentially makes that easier, although without introducing a new
risk.</t>

</section>
<section anchor="privacy-considerations" title="Privacy Considerations">

<t>This document does not add any practical new privacy issues.</t>

</section>
<section anchor="nat-considerations" title="NAT Considerations">

<t>The method described here is not affected by the use of NAT devices.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This document contains no actions for IANA.  This section will be
removed during conversion into an RFC by the RFC editor.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>The authors wish to thank Matti Klock, Mukund Sivaraman, Jean Roy, and
Jason Moreau for initial review.  Feedback from Robert Edmonds, Davey
Song, and Ralf Weber has also been incorporated.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC2181;
&RFC2119;
&RFC6891;


    </references>

    <references title='Informative References'>

<reference anchor="DikeBreaks" target="https://www.isi.edu/~johnh/PAPERS/Moura18b.pdf">
  <front>
    <title>When the Dike Breaks: Dissecting DNS Defenses During DDos</title>
    <author initials="G.C.M." surname="Moura" fullname="Giovane C. M. Moura">
      <organization></organization>
    </author>
    <author initials="J." surname="Heidemann" fullname="John Heidemann">
      <organization></organization>
    </author>
    <author initials="M." surname="Mueller" fullname="Moritz Mueller">
      <organization></organization>
    </author>
    <author initials="R.d.O." surname="Schmidt" fullname="Ricardo de O. Schmidt">
      <organization></organization>
    </author>
    <author initials="M." surname="Davids" fullname="Marco Davids">
      <organization></organization>
    </author>
    <date year="2018" month="October" day="31"/>
  </front>
  <seriesInfo name="ACM" value="2018 Internet Measurement Conference"/>
  <seriesInfo name="DOI" value="10.1145/3278532.3278534"/>
</reference>
&RFC7719;


    </references>



  </back>

<!-- ##markdown-source:
H4sIAN/nwVsAA+1cbXfbxpX+Pr9iqnyI3ZK0JDuxrd2zrSIpiRpL9opynW7T
s2cIDElUIMDiRTSTen/7Ps+9MwAoS063m+6n9YljiQQGd+7rc18G4/HYNFmT
+yM79dVtVizstHG5t6eucbYp7flqXZW3+P1yaq98neWZL5KtcbNZ5W+P5GPe
6PU2k5ZJ4VZYLa3cvBlnvpmP06Iu1+OaV41rXjXePzSpa3DV4f7Bi/HBvjHZ
ujqyTdXWzeH+/kt87yrvjux50fiq8I3ZLORZr9/Yd2V1QzK/qcp2bW42/UXj
Uz7TJK45snWTmnbNh9RH9mD/6bMR//+FMUmZ4u4j29ZjVydZZtbZkbF2jL0m
8m+9XVV+XuvPZdXIL8a1zbKs5Er8tTYrsO7p5GRiX7lNBZZ4+Vj3fupus9Se
7H5VVnjq68olYO5v7Om2kE/9ymU5dg6u/C5NJ7jI7D7j3cR+165clQ3Wf+cq
rDv8XBb/piwXuT6sBtkebDj4cn/fHq/Wy6xZeocP7RtX3WzcVq5KsmZ7ZC/K
tmhcVtg/ZH6jn5cpnnJybF8+23/2NHyEiypc/XZ6PCR8I6T87kZImVBSu+S/
mdhpWaYD4t+0BUjrPw0LreXj+ncL2cQkKVdQimJeVivXZLeenD/NbvxXUIub
+kjubFy14CaXTbOuj5482Ww2k6zOJj5tn/zXX8plsXzy5vjN2dX0CbZYuYMX
s8k6neutqvJ775bgI1gja9uwOH6pa5801DLq96mf+6L2tT1tK/nstKz3ZJle
K/hnHP6NO/0mK29d4S2U5GJihYYHrvw9iLXf+iwFM4rigYsuyiprfrQXrc9z
Xz1w0VWWuCotberta7A+Wa6ytHloQVclpSprLV/t2OT46YGqkq8y2D1EEfd5
fHKhV3WWZy+8q9vKr3zR2JOymPte7yG31+e0wcnBwbMvnjw9fP7ii6eHE/33
mTHj8di6GRTWJVCe62VWq+/AFuZZAa47u/Jgc2qhDLbySVvVUAj8VJf5ra9q
eqm29rZWv3U5pW8R3+VuS9hh2TZugXU2lLVKLGtEqYQP4pewSgLOl42dcWWX
LH1qsAKMH89ZWv9+nVU+JYfcRGnGxf4/z9L/5L+g279vqPEQoa3/2sJ72Rl2
dAOVto9++NMPf35ssTGXplmTlYXL7QxfLuDCirRX87IYWVfUm7ApPPqvLTia
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

-->

</rfc>

