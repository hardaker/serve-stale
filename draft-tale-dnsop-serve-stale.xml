<?xml version="1.0" encoding="us-ascii"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.0.40 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC2181 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2181.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7719 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7719.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-tale-dnsop-serve-stale-00" category="std" updates="1034, 1035">

  <front>
    <title abbrev="DNS Serve Stale">Serving Stale Data to Improve DNS Resiliency</title>

    <author initials="D.C." surname="Lawrence" fullname="David C Lawrence">
      <organization>Akamai Technologies</organization>
      <address>
        <postal>
          <street>150 Broadway</street>
          <city>Cambridge</city>
          <code>MA 02142-1054</code>
          <country>USA</country>
        </postal>
        <email>tale@akamai.com</email>
      </address>
    </author>
    <author initials="W." surname="Kumari" fullname="Warren Kumari">
      <organization>Google</organization>
      <address>
        <postal>
          <street>1600 Amphitheatre Parkway</street>
          <city>Mountain View</city>
          <code>CA 94043</code>
          <country>USA</country>
        </postal>
        <email>warren@kumari.net</email>
      </address>
    </author>

    <date year="2017" month="March"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This draft defines a method for recursive resolvers to use stale DNS
data to avoid outages when authoritative nameservers cannot be reached
to refresh expired data.</t>



    </abstract>


    <note title="Ed note">


<t>Text inside square brackets ([]) is additional background
information, answers to frequently asked questions, general musings,
etc.  They will be removed before publication.  This document is being
collaborated on in GitHub at
&lt;https://github.com/vttale/serve-stale&gt;.  The most recent
version of the document, open issues, etc should all be available
here.  The authors gratefully accept pull requests.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Traditionally the Time To Live (TTL) of a DNS resource record has been
understood to represent the maximum number of seconds that a record
can be used before it must be discarded, based on its description and
usage in <xref target="RFC1035"/> and clarifications in <xref target="RFC2181"/>.
Specifically, <xref target="RFC1035"/> Section 3.2.1 says that it "specifies the
time interval that the resource record may be cached before the source
of the information should again be consulted".</t>

<t>Notably, the original DNS specification does not say that data past
its expiration cannot be used.  This document proposes a method for
how recursive resolvers should handle stale DNS data to balance the
competing needs of resiliency and freshness. It is predicated on the
observation that authoritative server unavailability can cause outages
even when the underlying data those servers would return is typically
unchanged.</t>

<t>There are a number of reasons why an authoritative server may become
unreachable, including Denial of Service (DoS) attacks, network
issues, and so on.  This document suggests that, if the recursive
server is unable to contact the authoritative server but still has
data for the query name, it essentially extends the TTL of the
existing data on the assumption that "stale bread is better than no
bread".</t>

<t>Several major recursive resolver operations currently use stale data
for answers in some way, including Akamai, OpenDNS, and Xerocole.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
document are to be interpreted as described in <xref target="RFC2119"/>.</t>

<t>For a comprehensive treatment of DNS terms, please see <xref target="RFC7719"/>.</t>

</section>
<section anchor="description" title="Description">

<t>Three notable timers drive considerations for the use of stale data,
as follows:</t>

<t><list style="symbols">
  <t>A client response timer, which is the maximum amount of time a
recursive resolver should allow between the receipt of a resolution
request and sending its response.</t>
  <t>A query resolution timer, which caps the total amount of time a
recursive resolver spends processing the query.</t>
  <t>A maximum stale timer, which caps the amount of time
that records will be kept past their expiration.</t>
</list></t>

<t>Recursive resolvers already have the second timer; the first and
third timers are new concepts for this mechanism.</t>

<t>When a request is received by the recursive resolver, it SHOULD start
the client response timer.  This timer is used to avoid client
timeouts.  It SHOULD be configurable, with a recommended value of 1.8
seconds.</t>

<t>The resolver then checks its cache for an unexpired answer. If it
finds none and the Recursion Desired flag is not set in the request,
it SHOULD immediately return the response without consulting the
cache for expired records.</t>

<t>If iterative lookups will be done, it SHOULD start the query
resolution timer.  This timer bounds the work done by the resolver,
and is commonly around 10 to 30 seconds. [ BIND 9 used to use a
hard-coded constant of 30 seconds and has more recently added a
configuration parameter that defaults to 10 seconds and is capped at
30. A rigorous exploration of other implementations has not yet been
done. ]</t>

<t>If the answer has not been completely determined by the time the
client response timer has elapsed, the resolver SHOULD then check its
cache to see whether there is expired data that would satisfy the
request.  If so, it adds that data to the response message and SHOULD
set the TTL of each expired record in the message to 1 second.  The
response is then sent to the client while the resolver continues its
attempt to refresh the data.  1 second was chosen because historically
0 second TTLs have been problematic for some implementations.  It not
only sidesteps those potential problems with no practical negative
consequence, it would also rate limit further queries from any client
that is honoring the TTL, such as a forwarding resolver.</t>

<t>The maximum stale timer is used for cache management and is
independent of the query resolution process. This timer is
conceptually different from the maximum cache TTL that exists in many
resolvers, the latter being a clamp on the value of TTLs as received
from authoritative servers.  The maximum stale timer SHOULD be
configurable, and defines the length of time after a record expires
that it SHOULD be retained in the cache.  The suggested value is 7
days, which gives time to notice the resolution problem and for human
intervention for fixing it.</t>

<t>This same basic technique MAY be used to handle stale data associated
with delegations.  If authoritative server addresses are not able to
be refreshed, resolution can possibly still be successful if the
authoritative servers themselves are still up.</t>

</section>
<section anchor="implementation-caveats" title="Implementation Caveats">

<t>Answers from authoritative servers that have a DNS Response Code of
either 0 (NOERROR) or 3 (NXDOMAIN) MUST be considered to have
refreshed the data at the resolver.  In particular, this means that
this method is not meant to protect against operator error at the
authoritative server that turns a name that is intended to be valid
into one that is non-existent, because there is no way for a resolver
to know intent.</t>

<t>[ Paul Vixie has suggested that it be made explicit that an auth
NXDOMAIN cause all data, even stale data, below the NXDOMAIN to also
be removed, a la
https://datatracker.ietf.org/doc/draft-vixie-dnsext-resimprove/.
Conceptually this certainly has its appeal but addressing it in this
document when resimprove has not progressed has procedural problems.
This paragraph will be removed in the next draft, either dropping the
idea here completely or blessing it based on positive feedback to do
so. ]</t>

<t>Resolution is given a chance to succeed before stale data is used to
adhere to the original intent of the design of the DNS.  This
mechanism is only intended to add robustness to failures, and to be
enabled all the time.  If stale data were used immediately and then a
cache refresh attempted after the client response has been sent, the
resolver would frequently be sending data that it would have had no
trouble refreshing.</t>

<t>It is important to continue the resolution attempt after the stale
response has been sent, until the query resolution timeout, because
some pathological resolutions can take many seconds to succeed as they
cope with unavailable servers, bad networks, and other problems.
Stopping the resolution attempt when the response with expired data
has been sent would mean that answers in these pathological cases
would never be refreshed.</t>

<t>Canonical Name (CNAME) records mingled in the expired cache with other
records at the same owner name can cause surprising results.  This was
observed with an initial implementation in BIND, where a hostname
changed from having a CNAME record to an IPv4 Address (A) record.
BIND does not evict CNAMEs in the cache when other types are received,
which in normal operations is not an issue.  However, after both
records expired and the authorities became unavailable, the fallback
to stale answers returned the older CNAME instead of the newer A.</t>

<t>[ This probably applies to other occluding types, so more thought
should be given to the overall issue. It should probably also be
rewritten to not suggest that this only a quirk of BIND. ]</t>

<t>Keeping records around after their normal expiration will of course
cause caches to grow larger than if records were removed at their TTL.
Specific guidance on managing cache sizes is outside the scope of this
document.  Some areas for consideration include whether to track the
popularity of names in client requests versus evicting by maximum age,
and whether to provide a feature for manually flushing only stale
records.</t>

</section>
<section anchor="implementation-status" title="Implementation Status">

<t>[RFC Editor: per RFC 6982 this section should be removed prior to
publication.]</t>

<t>The algorithm described in this draft was originally implemented as a
patch to BIND 9.7.0.  It has been in production on Akamai's production
network since 2011, and effectively smoothed over transient failures
and longer outages that would have resulted in major incidents. The
patch has been contributed to the Internet Systems Consortium in
anticipation that it will be incorporated to their main BIND
distribution.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>The most obvious security issue is the increased likelihood of DNSSEC
validation failures when using stale data because signatures could be
returned outside their validity period.  This would only be an issue
if the authoritative servers are unreachable, the only time the
techniques in this document are used, and thus does not introduce
a new failure in place of what would have otherwise been success.</t>

<t>Additionally, bad actors have been known to use DNS caches to keep
records alive even after their authorities have gone away.  This makes
that easier.</t>

</section>
<section anchor="privacy-considerations" title="Privacy Considerations">

<t>This document does not add any practical new privacy issues.</t>

</section>
<section anchor="nat-considerations" title="NAT Considerations">

<t>The method described here is not affected by the use of NAT devices.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This document contains no actions for IANA.  This section will be
removed during conversion into an RFC by the RFC editor.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>The authors wish to thank Matti Klock, Mukund Sivaraman, Jean Roy, and
Jason Moreau for initial review.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC2181;
&RFC2119;


    </references>

    <references title='Informative References'>

&RFC7719;


    </references>



  </back>

<!-- ##markdown-source:
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
PwGcgCKfUikAAA==

-->

</rfc>

