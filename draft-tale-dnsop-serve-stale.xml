<?xml version="1.0" encoding="us-ascii"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.0.40 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC2181 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2181.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7719 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7719.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-tale-dnsop-serve-stale-00" category="std">

  <front>
    <title>Serving Stale Data to Improve DNS Resiliency</title>

    <author initials="D.C." surname="Lawrence" fullname="David C Lawrence">
      <organization>Akamai Technologies</organization>
      <address>
        <postal>
          <street>150 Broadway</street>
          <city>Cambridge</city>
          <code>MA 02142-1054</code>
          <country>USA</country>
        </postal>
        <email>tale@akamai.com</email>
      </address>
    </author>
    <author initials="W." surname="Kumari" fullname="Warren Kumari">
      <organization>Google</organization>
      <address>
        <postal>
          <street>1600 Amphitheatre Parkway</street>
          <city>Mountain View</city>
          <code>CA 94043</code>
          <country>USA</country>
        </postal>
        <email>warren@kumari.net</email>
      </address>
    </author>

    <date year="2017" month="February"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This draft defines a method for recursive resolvers to use stale DNS
data to avoid outages when authoritative nameservers cannot be reached
to refresh expired data.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Traditionally the Time To Live (TTL) of a DNS resource record has been
understood to represent the maximum number of seconds that a record
can be used before it must be discarded, based on its description and
usage in <xref target="RFC1035"/> and clarifications in <xref target="RFC2181"/>.
Specifically, <xref target="RFC1035"/> Section 3.2.1 says that it, "specifies the
time interval that the resource record may be cached before the source
of the information should again be consulted".</t>

<t>Notably, the original DNS specification does not say that data past
its expiration cannot be used.  This document proposes a method for
how recursive resolvers should handle stale DNS data to balance the
competing needs of resiiency and strict correctness. It is predicated
on the observation that authoritative server unavailability can cause
outages even when the underlying data those servers would return is
typically unchanged.</t>

<t>Several major recursive resolver operations currently use stale data
for answers in some way, including OpenDNS, Xerocole, and Google (I
think).</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
document are to be interpreted as described in <xref target="RFC2119"/></t>

<t>For a comprehensive treatment of DNS terms, please see <xref target="RFC7719"/>.</t>

</section>
<section anchor="description" title="Description">

<t>Three notable timers drive considerations for the use of stale data,
as follows:</t>

<t><list style="symbols">
  <t>A client response timer, which is the maximum amount of time a
recursive resolver should allow between the receipt of a resolution
request and sending its response.</t>
  <t>A query resolution timer, which caps the total amount of time a
recursive resolver spends processing the query.</t>
  <t>A maximum retention timer, which caps the amount of time
that records will be kept past their expiration.</t>
</list></t>

<t>Recursive resolvers already have that second timer; the first and
third timers are new concepts for this mechanism.</t>

<t>When a request is received by the recursive resolver, it SHOULD start
the client response timer.  This timer is used to avoid client
timeouts.  It SHOULD be configurable, with a recommended value of 1.8
seconds.</t>

<t>The resolver then checks its cache for an unexpired answer. If it
finds none and the Recursion Desired flag is not set in the request,
it SHOULD immediately return the response without consulting the
expired record cache.</t>

<t>If iterative lookups will be done, it SHOULD start the query
resolution timer.  This timer bounds the work done by the resolver,
and is commonly 30 seconds.</t>

<t>If the answer has not been completely determined when the client
response timer has elapsed, the resolver SHOULD then check its cache
to see whether there is expired data that would satisfy the request.
If so, it sends a response and the TTL fields of the expired records
SHOULD be set to 1.</t>

<t>Orthogonal to the query resolution process, the maximum retention
timer is used for cache management.  It SHOULD be configurable, and
defines the length of time after a record expires that it SHOULD be
retained in the cache.  The suggested value is 7 days, which gives
time to notice the problem and and for human intervation for fixing
it,</t>

</section>
<section anchor="implementation-caveats" title="Implementation Caveats">

<t>Note well that answers from authoritive servers that have a DNS
Response Code of either 0 (NOERROR) or 3 (NXDOMAIN) MUST be considered
to have refreshed the data.  In particular, this means that this
method is not meant to protect against operator error at the
authoritative server that turns a name that is intended to be valid
into one that is non-existent, because there is no way for a resolver
to know intent.</t>

<t>It is important to continue the resolution attempt after the stale
response has been sent because some pathological resolutions can take
at least a dozen seconds to be successful as they fall back from down
servers, bad networks, and other problems.  Stopping the resolution
just because the response has been sent would mean that answers in
these pathological cases would never be refreshed.</t>

<t>Canonical Name (CNAME) records mingled in the expired cache with other
records at the same owner name can cause surprising results.  This was
observed with an initial implementation in BIND, where a hostname
changed first from having a CNAME record to an IPv4 Address (A)
record.  BIND does not evict CNAMEs in the cache when other types are
received, which in normal operations is not an issue.  However, after
both records expired and the authorities became unavailable, the
fallback to stale answers returned the older CNAME instead of the
newer A.</t>

<t>(This might apply to other occluding types, so more though should be
given to the overall issue.)</t>

<t>Keeping records around after their normal expiration will of course
cause caches to grow larger than if records were removed at their TTL.
Specific guidance about how to manage cache sizes is outside the scope
of this document.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>The most obvious security issue is the increased likelihood of DNSSEC
validation failures when using stale data because signatures could be
returned outside their validity period.</t>

<t>Additionally, bad actors have been known to use DNS caches as sort of
a perpetual cloud database, keeping records alive even after their
authorities have gone away.  This makes that easier.</t>

</section>
<section anchor="privacy-considerations" title="Privacy Considerations">

<t>This document does not add any practical new privacy issues.</t>

</section>
<section anchor="nat-considerations" title="NAT Considerations">

<t>The method described here is not affected by the use of NAT devices.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This document contains no actions for IANA.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>The authors wish to thank &#8230;</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC2181;
&RFC2119;
&RFC7719;


    </references>




  </back>

<!-- ##markdown-source:
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
fwNYzrUWJBkAAA==

-->

</rfc>

