<?xml version="1.0" encoding="us-ascii"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.0.40 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC2181 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2181.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7719 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7719.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-tale-dnsop-serve-stale-00" category="std" updates="1034, 1035">

  <front>
    <title abbrev="DNS Serve Stale">Serving Stale Data to Improve DNS Resiliency</title>

    <author initials="D.C." surname="Lawrence" fullname="David C Lawrence">
      <organization>Akamai Technologies</organization>
      <address>
        <postal>
          <street>150 Broadway</street>
          <city>Cambridge</city>
          <code>MA 02142-1054</code>
          <country>USA</country>
        </postal>
        <email>tale@akamai.com</email>
      </address>
    </author>
    <author initials="W." surname="Kumari" fullname="Warren Kumari">
      <organization>Google</organization>
      <address>
        <postal>
          <street>1600 Amphitheatre Parkway</street>
          <city>Mountain View</city>
          <code>CA 94043</code>
          <country>USA</country>
        </postal>
        <email>warren@kumari.net</email>
      </address>
    </author>

    <date year="2017" month="March"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This draft defines a method for recursive resolvers to use stale DNS
data to avoid outages when authoritative nameservers cannot be reached
to refresh expired data.</t>



    </abstract>


    <note title="Ed note">


<t>Text inside square brackets ([]) is additional background
information, answers to frequently asked questions, general musings,
etc.  They will be removed before publication.  This document is being
collaborated on in GitHub at
&lt;https://github.com/vttale/serve-stale&gt;.  The most recent
version of the document, open issues, etc should all be available
here.  The authors gratefully accept pull requests.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Traditionally the Time To Live (TTL) of a DNS resource record has been
understood to represent the maximum number of seconds that a record
can be used before it must be discarded, based on its description and
usage in <xref target="RFC1035"/> and clarifications in <xref target="RFC2181"/>.
Specifically, <xref target="RFC1035"/> Section 3.2.1 says that it "specifies the
time interval that the resource record may be cached before the source
of the information should again be consulted".</t>

<t>Notably, the original DNS specification does not say that data past
its expiration cannot be used.  This document proposes a method for
how recursive resolvers should handle stale DNS data to balance the
competing needs of resiliency and freshness. It is predicated on the
observation that authoritative server unavailability can cause outages
even when the underlying data those servers would return is typically
unchanged.</t>

<t>There are a number of reasons why an authoritative server may become
unreachable, including Denial of Service (DoS) attacks, network
issues, and so on.  This document suggests that, if the recursive
server is unable to contact the authoritative server but still has
data for the query name, it essentially extends the TTL of the
existing data on the assumption that "stale bread is better than no
bread".</t>

<t>Several major recursive resolver operations currently use stale data
for answers in some way, including Akamai, OpenDNS, and Xerocole.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
document are to be interpreted as described in <xref target="RFC2119"/>.</t>

<t>For a comprehensive treatment of DNS terms, please see <xref target="RFC7719"/>.</t>

</section>
<section anchor="description" title="Description">

<t>Three notable timers drive considerations for the use of stale data,
as follows:</t>

<t><list style="symbols">
  <t>A client response timer, which is the maximum amount of time a
recursive resolver should allow between the receipt of a resolution
request and sending its response.</t>
  <t>A query resolution timer, which caps the total amount of time a
recursive resolver spends processing the query.</t>
  <t>A maximum stale timer, which caps the amount of time
that records will be kept past their expiration.</t>
</list></t>

<t>Recursive resolvers already have the second timer; the first and
third timers are new concepts for this mechanism.</t>

<t>When a request is received by the recursive resolver, it SHOULD start
the client response timer.  This timer is used to avoid client
timeouts.  It SHOULD be configurable, with a recommended value of 1.8
seconds.</t>

<t>The resolver then checks its cache for an unexpired answer. If it
finds none and the Recursion Desired flag is not set in the request,
it SHOULD immediately return the response without consulting the
cache for expired records.</t>

<t>If iterative lookups will be done, it SHOULD start the query
resolution timer.  This timer bounds the work done by the resolver,
and is commonly around 10 to 30 seconds. [ BIND 9 used to use a
hard-coded constant of 30 seconds and has more recently added a
configuration parameter that defaults to 10 seconds and is capped at
30. A rigorous exploration of other implementations has not yet been
done. ]</t>

<t>If the answer has not been completely determined by the time the
client response timer has elapsed, the resolver SHOULD then check its
cache to see whether there is expired data that would satisfy the
request.  If so, it adds that data to the response message and SHOULD
set the TTL of each expired record in the message to 1 second.  The
response is then sent to the client while the resolver continues its
attempt to refresh the data.  1 second was chosen because historically
0 second TTLs have been problematic for some implementations.  It not
only sidesteps those potential problems with no practical negative
consequence, it would also rate limit further queries from any client
that is honoring the TTL, such as a forwarding resolver.</t>

<t>The maximum stale timer is used for cache management and is
independent of the query resolution process. This timer is
conceptually different from the maximum cache TTL that exists in many
resolvers, the latter being a clamp on the value of TTLs as received
from authoritative servers.  The maximum stale timer SHOULD be
configurable, and defines the length of time after a record expires
that it SHOULD be retained in the cache.  The suggested value is 7
days, which gives time to notice the resolution problem and for human
intervention for fixing it.</t>

<t>This same basic technique MAY be used to handle stale data associated
with delegations.  If authoritative server addresses are not able to
be refreshed, resolution can possibly still be successful if the
authoritative servers themselves are still up.</t>

</section>
<section anchor="implementation-caveats" title="Implementation Caveats">

<t>Answers from authoritative servers that have a DNS Response Code of
either 0 (NOERROR) or 3 (NXDOMAIN) MUST be considered to have
refreshed the data at the resolver.  In particular, this means that
this method is not meant to protect against operator error at the
authoritative server that turns a name that is intended to be valid
into one that is non-existent, because there is no way for a resolver
to know intent.</t>

<t>[ Paul Vixie has suggested that it be made explicit that an auth
NXDOMAIN cause all data, even stale data, below the NXDOMAIN to also
be removed, a la
https://datatracker.ietf.org/doc/draft-vixie-dnsext-resimprove/.
Conceptually this certainly has its appeal but addressing it in this
document when resimprove has not progressed has procedural problems.
This paragraph will be removed in the next draft, either dropping the
idea here completely or blessing it based on positive feedback to do
so. ]</t>

<t>Resolution is given a chance to succeed before stale data is used to
adhere to the original intent of the design of the DNS.  This
mechanism is only intended to add robustness to failures, and to be
enabled all the time.  If stale data were used immediately and then a
cache refresh attempted after the client response has been sent, the
resolver would frequently be sending data that it would have had no
trouble refreshing.</t>

<t>It is important to continue the resolution attempt after the stale
response has been sent, until the query resolution timeout, because
some pathological resolutions can take many seconds to succeed as they
cope with unavailable servers, bad networks, and other problems.
Stopping the resolution attempt when the response with expired data
has been sent would mean that answers in these pathological cases
would never be refreshed.</t>

<t>Canonical Name (CNAME) records mingled in the expired cache with other
records at the same owner name can cause surprising results.  This was
observed with an initial implementation in BIND, where a hostname
changed from having an IPv4 Address (A) record.to a CNAME.  The
version of BIND being used did not evict other types in the cache when
a CNAME was received, which in normal operations is not a significant
issue.  However, after both records expired and the authorities became
unavailable, the fallback to stale answers returned the older A
instead of the newer CNAME.</t>

<t>[ This probably applies to other occluding types, so more thought
should be given to the overall issue. ]</t>

<t>Keeping records around after their normal expiration will of course
cause caches to grow larger than if records were removed at their TTL.
Specific guidance on managing cache sizes is outside the scope of this
document.  Some areas for consideration include whether to track the
popularity of names in client requests versus evicting by maximum age,
and whether to provide a feature for manually flushing only stale
records.</t>

</section>
<section anchor="implementation-status" title="Implementation Status">

<t>[RFC Editor: per RFC 6982 this section should be removed prior to
publication.]</t>

<t>The algorithm described in this draft was originally implemented as a
patch to BIND 9.7.0.  It has been in production on Akamai's production
network since 2011, and effectively smoothed over transient failures
and longer outages that would have resulted in major incidents. The
patch has been contributed to the Internet Systems Consortium in
anticipation that it will be incorporated to their main BIND
distribution.</t>

<t>Unbound has a similar feature for serving stale answers, but it works
in a very different way by returning whatever cached answer it has
before trying to refresh expired records.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>The most obvious security issue is the increased likelihood of DNSSEC
validation failures when using stale data because signatures could be
returned outside their validity period.  This would only be an issue
if the authoritative servers are unreachable, the only time the
techniques in this document are used, and thus does not introduce
a new failure in place of what would have otherwise been success.</t>

<t>Additionally, bad actors have been known to use DNS caches to keep
records alive even after their authorities have gone away.  This makes
that easier.</t>

</section>
<section anchor="privacy-considerations" title="Privacy Considerations">

<t>This document does not add any practical new privacy issues.</t>

</section>
<section anchor="nat-considerations" title="NAT Considerations">

<t>The method described here is not affected by the use of NAT devices.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This document contains no actions for IANA.  This section will be
removed during conversion into an RFC by the RFC editor.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>The authors wish to thank Matti Klock, Mukund Sivaraman, Jean Roy, and
Jason Moreau for initial review.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC2181;
&RFC2119;


    </references>

    <references title='Informative References'>

&RFC7719;


    </references>



  </back>

<!-- ##markdown-source:
H4sIAHyHUlkAA41aXXcbuZF9x6/Aeh7W3kPRku2Jx9o9u1Fkz4wzluxIciZ7
4pwcsBskEfVXGmjR3Jz577m3AHQ3bc7uPsxYJLvRhapbt24V+uTkRAUXKnuu
b23/4JqNvg2msvq1CUaHVr+tu759wOfrW31jvaucbYq9MqtVbx/O5WveaONt
qmyLxtRYrezNOpzwu5Oy8W134nnViZdvTk9VaQKuenZ69vLk9LlSruvPdegH
H56dnr46faZMb825ftsE2zc2qN1GnvX+g/657e9p5g99O3TqfjdddPKaz1SF
Cefah1INHR/iz/XZ6fMXC/7/W6WKtsTd53rwJ8YXzqnOnSutT7DXQv71+7q3
ax//bvsgH5QZwrbt5Ur8p7VrsO7r5eVSvzO7Hi6x8nXc+2vz4Ep9efhT2+Op
F/emNk7f2WLbtFW7cdbLjx6PsTD77NtT/bu+NeXO7OWHwoX9ub409ap35Sau
hC3gIVcX+vTZ2YtnJ2en375I3w9N6HH5x9sL+cLiWRXcCpf/1siTl0Vbq8NN
/LzUPw216d1sAz+bHobPvxfrf2jbTWUPDf7N6am+qLutC1tr8KX+YPr7Q+uv
aJdxjf6js7vZDi4v9KsXpy+e/6/G78SU396LKUtCQZ2cnGizggWmwKe7rfMR
bbq0a9dYr42uLcJV6nXb694WQ+8dENpb31YPtvfE9eCt9hHp17dEo6DdPLSI
XDsEs8E6uy2cECPvgglcg/4RJGOVwjRNG/SKK5tia0uFFQAXPGer7efO9bbU
XHkZbcbF9q9vyr/yX9htPwdGwJUw5O8D8K5X2NG9DV4//vTnT395orExU5Yu
uLYxlV7hxw1A35TKNdhZbfjDQpvG79Km8Oi/D7YJ1V4bf4+n45PnVX6hN7ax
PZapB48E8AtlQ7HU+m5r93rnqiruo0aul/gT61vdDavKFfIYuZKObouhxhNo
28piISRUVZlV2yPV4LkGW9I/uPDjsNImqE//sQ2h8+dPn24AkGFF/D19CPT7
0xkhfPrPaImuWx8YMTxB0cd4sm7XGtgan7zQbYewOO+xt4XGLrTftkNVahM3
YR4AHLMCULe2t2nhGEWvN7RzPVT0UFHYLmCTuE385oNPkapdWeJ+9Q25pW/L
oaAPELPe5HBgAVp152r8r9XvCI7Hd3fvntBeI7xIvA19QbcWbV/qraHPbKMQ
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
XXpriZJJ/ROSugSU0SkAAA==

-->

</rfc>

